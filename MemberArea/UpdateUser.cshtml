@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.maskedinput.js"></script>
    <script>
        jQuery(function ($) {
            $("#MobileNumber").mask("(999) 999-9999");
        });
    </script>
}

@{

    WebSecurity.RequireAuthenticatedUser();
    if (Roles.IsUserInRole(WebSecurity.CurrentUserName, "Super Admin") || Roles.IsUserInRole(WebSecurity.CurrentUserName, "Manager") || Roles.IsUserInRole(WebSecurity.CurrentUserName, "Librarian"))
    { }
    else {
        Response.Redirect("~/Error/Forbidden.cshtml");
    }

    Layout = "~/_MemberLayout.cshtml";

    // Initialize general page variables
    var Email = "";
    var EmployeeNumber = "";
    var FirstName = "";
    var MiddleName = "";
    var LastName = "";
    var MobileNumber = "";
    var Position = "";
    bool isSuccess = false;

    //getting the Beta ID from URL
    var userID = Request.QueryString["id"];

    if (userID.IsEmpty())
    {
        Response.Redirect("~/MemberArea/ManageUsers");
    }

    if (!IsPost)
    {
        if (!Request.QueryString["id"].IsEmpty() && Request.QueryString["id"].IsInt())
        {
            userID = Request.QueryString["id"];


            var db = Database.Open("StarterSite");
            var dbCommand = "SELECT * FROM UserProfile Where UserId = @0";
            var row = db.QuerySingle(dbCommand, userID);
            Email = row.Email;
            EmployeeNumber = row.EmployeeNumber;
            FirstName = row.FirstName;
            MiddleName = row.MiddleName;
            LastName = row.LastName;
            MobileNumber = row.MobileNumber;
        }
    }



    //if this is a POST request, validate and process data
    if (IsPost && Request.Form["update"] != null)
    {
        //setup validation
        Validation.RequireField("Email", "You must specify an email address.");
        Validation.RequireField("EmployeeNumber", "You must specify an employee number.");
        Validation.RequireField("FirstName", "You must specify a first name.");
        Validation.RequireField("MiddleName", "You must specify a middle name.");
        Validation.RequireField("LastName", "You must specify a last name.");
        Validation.RequireField("MobileNumber", "You must specify a mobile number.");

        Email = Request.Form["Email"];
        EmployeeNumber = Request.Form["EmployeeNumber"];
        FirstName = Request.Form["FirstName"];
        MiddleName = Request.Form["MiddleName"];
        LastName = Request.Form["LastName"];
        MobileNumber = Request.Form["MobileNumber"];

        // If all information is valid, create a new account
        if (Validation.IsValid())
        {
            // Insert a new beta into the database
            var db = Database.Open("StarterSite");

            // insert beta into the Beta Table
            db.Execute("UPDATE UserProfile SET Email=@0, EmployeeNumber=@1, FirstName=@2, MiddleName=@3, LastName=@4, MobileNumber=@5 WHERE UserId=@6", Email, EmployeeNumber, FirstName, MiddleName, LastName, MobileNumber, userID);
            isSuccess = true;
        }
        
    }
}


<form method="post" enctype="multipart/form-data">
    <div class="col-lg-12 text-left">
        <ul class="breadcrumb">
            <li><a href="~/MemberArea/Dashboard.cshtml">Dashboard</a></li>
            <li class="active">Update P2 Drive</li>
        </ul>
    </div>

    <div class="form-horizontal col-lg-8">

        <div class="form-group">
            <div class="col-md-4 control-label">
                <label for="EmployeeNumber" @if (!ModelState.IsValidField("EmployeeNumber")) { <text> class="error-label" </text>       }>Employee Number</label>
            </div>
            <div class="col-md-3">
                <input class="form-control" type="text" id="EmployeeNumber" name="EmployeeNumber" @Validation.For("EmployeeNumber") value="@EmployeeNumber" readonly/>
                <div class="text-danger">
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("EmployeeNumber")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 control-label">
                <label for="Email" @if (!ModelState.IsValidField("Email")) { <text> class="error-label" </text>        }>Email</label>
            </div>
            <div class="col-md-6">
                <input class="form-control" type="text" id="Email" name="Email" @Validation.For("Email") value="@Email" />
                <div class="text-danger">
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("Email")
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4 control-label">
                <label for="FirstName" @if (!ModelState.IsValidField("FirstName")) { <text> class="error-label" </text>        }>First Name</label>
            </div>
            <div class="col-md-5">
                <input class="form-control" type="text" id="FirstName" name="FirstName" @Validation.For("FirstName") value="@FirstName" />
                <div class="text-danger">
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("FirstName")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 control-label">
                <label for="MiddleName" @if (!ModelState.IsValidField("MiddleName")) { <text> class="error-label" </text>         }>Middle Name</label>
            </div>
            <div class="col-md-5">
                <input class="form-control" type="text" id="MiddleName" name="MiddleName" @Validation.For("MiddleName") value="@MiddleName" />
                <div class="text-danger">
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("MiddleName")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 control-label">
                <label for="LastName" @if (!ModelState.IsValidField("LastName")) { <text> class="error-label" </text>          }>Last Name</label>
            </div>
            <div class="col-md-5">
                <input class="form-control" type="text" id="LastName" name="LastName" @Validation.For("LastName") value="@LastName" />
                <div class="text-danger">
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("LastName")
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-4 control-label">
                <label for="MobileNumber" @if (!ModelState.IsValidField("MobileNumber")) { <text> class="error-label" </text>           }>Mobile Number</label>
            </div>
            <div class="col-md-5">
                <input class="form-control" type="text" id="MobileNumber" name="MobileNumber" @Validation.For("MobileNumber") value="@MobileNumber" />
                <div class="text-danger">
                    @* Write any user name validation errors to the page *@
                    @Html.ValidationMessage("MobileNumber")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-lg-10 col-lg-offset-5">
                <a href="~/MemberArea/ManageUsers.cshtml" class="btn btn-default">Cancel</a>
                <input id="submit" type="submit" class="btn btn-primary" value="Update" name="update" />
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-3"></div>
            <div class="col-md-9 text-danger">
                @AntiForgery.GetHtml()
                @* If at least one validation error exists, notify the user *@
                @Html.ValidationSummary("Updating User Info was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)
                @if (isSuccess)
                {
                    <p class="text-success">
                        Employee Info has been succesfully Updated. <br />
                    </p>
                }
            </div>
        </div>
    </div>
</form>
