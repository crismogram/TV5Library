@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    if(WebSecurity.IsAuthenticated){
        Response.Redirect("~/MemberArea/Dashboard.cshtml");
    }

    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Log in";

    // Initialize general page variables
    var email = "";
    var password = "";
    var rememberMe = false;

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty()) {
        // Some external login providers always require a return URL value
        returnUrl = Href("~/");
    }

    // Setup validation
    Validation.RequireField("email", "You must specify an email address.");
    Validation.RequireField("password", "You must specify a password.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Password must be at least 6 characters"));

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        // is this an external login request?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty()) {
            OAuthWebSecurity.RequestAuthentication(provider, Href("~/Account/RegisterService", new { returnUrl }));
            return;
        } else if (Validation.IsValid()) {
            email = Request.Form["email"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(email) && WebSecurity.GetPasswordFailuresSinceLastSuccess(email) > 30 && WebSecurity.GetLastPasswordFailureDate(email).AddSeconds(60) > DateTime.UtcNow) {
                Response.Redirect("~/Account/AccountLockedOut");
                return;
            }

            // Attempt to log in using provided credentials
            if (WebSecurity.Login(email, password, rememberMe)) {
                Response.Redirect("~/MemberArea/Dashboard");
                //Context.RedirectLocal(returnUrl);
                //return;
            } else {
                ModelState.AddFormError("The user name or password provided is incorrect.");
            }
        }
    }
}

<form method="post">
    <div class="row">
        <div class="col-lg-8">
            <div class="jumbotron">
                <div class="text-center"><img width="180" src="~/Images/logo.png" /></div>
                
                <h2>Welcome to TV5 News Online Library System</h2>

            </div>
            <ul class="nav nav-tabs">
                <li class=" pull-right"><a href="#t0" data-toggle="tab">About</a></li>
                <li class="active"><a href="#t1" data-toggle="tab">Library Users</a></li>
                <li class="pull-right"><a href="#t2" data-toggle="tab">Developers</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane fade" id="t0">
                    <div class="col-lg-6">
                        <div class="well-lg">
                            <p>A Library system built from scratch that features easy navigation, simple layout and functions that makes sense.</p>
                            <p>Using the latest technology the world has to offer.</p>
                            <ul>
                                <li>HTML 5/CSS3</li>
                                <li>ASP.Net/Razor C#</li>
                                <li>Bootstrap</li>
                                <li>SQL Server</li>
                                <li>Javascript/JQuery</li>
                                <li>Ajax/Telerik</li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="well-lg">
                            <p>Combined with our love to web development and a dose of perfectionism to meet the highest web standards we are able to accomplish the following feats.</p>
                            <ul>
                                <li>Works across All Major Browsers: Google Chrome, Mozilla Firefox, Internet Explorer/Edge, Apple Safari, Opera</li>
                                <li>Responsive</li>
                                <li>Scalable Data Structure</li>
                                <li>Reports exportable to CSV and PDF</li>
                                <li>Data Integrity and Hierarchy</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade active in" id="t1">
                    <div class="well-lg">
                        <p>Researchers, cameramen and writers can register to be library users to request for P2 Drives and Beta Tapes online. They can also search the Beta Tapes archives.</p>

                        <p>How to access the Library System?</p>
                        <ol>
                            <li>Register <a href="~/Account/Register.cshtml">here</a>.</li>
                            <li>Fill out the Form accurately.</li>
                            <li>Check your inbox and confirm your email address. Check Junk Folder.</li>
                            <li>Visit the Library and provide your company ID for verification.</li>
                            <li>That's it. You can now use library system.</li>
                        </ol>
                    </div>
                </div>
                <div class="tab-pane fade" id="t2">
                    <div class="col-lg-4">
                        <div class="well-lg">
                            <div class="text-center">
                                <img class="img-rounded" width="120" src="~/Images/crismon.jpg" /><br />
                                Crismon Timpog<br />
                                Lead Programmer<br /><br />
                                <p>A graduating student by day, a web developer at night, a good husband to a lovely wife and a proud father to two awesome kids 24/7.</p>
                            </div>

                            
                            
                           
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="well-lg">
                            <div class="text-center">
                                <img class="img-rounded" width="120" src="~/Images/jc.jpg" /><br />
                                Johnecis Madrid<br />
                                Documentation Guru

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="well-lg">
                            <div class="text-center">
                                <img  class="img-rounded" width="120" src="~/Images/ga.jpg" /><br />
                                Gareth Juarez<br />
                                Quality Analyst

                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
        <div class="col-lg-4 well-lg">
            <div class="form-horizontal">
                <fieldset>
                    <legend class="text-center">Login</legend>
                    <div class="form-group">
                        <div class="col-md-4 control-label">
                            <label for="email" @if (!ModelState.IsValidField("email")) { <text> class="error-label" </text> }>Email address</label>
                        </div>
                        <div class="col-md-8">
                            <input class="form-control" type="text" id="email" name="email" value="@email" @Validation.For("email") />
                            <div class="text-danger">
                                @* Write any user name validation errors to the page *@
                                @Html.ValidationMessage("email")
                            </div>

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 control-label">
                            <label for="password" @if (!ModelState.IsValidField("password")) { <text> class="error-label" </text> }>Password</label>
                        </div>
                        <div class="col-md-8">
                            <input class="form-control" type="password" id="password" name="password" @Validation.For("password") />
                            <div class="text-danger">
                                @* Write any password validation errors to the page *@
                                @Html.ValidationMessage("password")
                            </div>

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 control-label"></div>
                        <div class="col-md-4">
                            <input id="submitbutton" type="submit" class="btn btn-default" />
                        </div>
                        <div class="col-md-4">
                            <a class="btn btn-link" href="~/Account/ForgotPassword">Forgot Password?</a>
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        <div class="col-md-2"></div>
                        <div class="col-md-10 text-danger">
                            @AntiForgery.GetHtml()
                            @* If one or more validation errors exist, show an error *@
                            @Html.ValidationSummary("", excludeFieldErrors: true, htmlAttributes: null)
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>

</form>
