@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Password Reset";

    var passwordResetToken = Request.Form["passwordResetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;

    // Setup validation
    Validation.RequireField("newPassword", "The new password field is required.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("newPassword", "The new password and confirmation password do not match."));
    Validation.RequireField("passwordResetToken", "The password reset token field is required.");
    Validation.Add("newPassword",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "New password must be at least 6 characters"));

    if (IsPost && Validation.IsValid()) {
        AntiForgery.Validate();
        var newPassword = Request["newPassword"];
        var confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword)) {
            isSuccess = true;
        } else {
            ModelState.AddError("passwordResetToken", "The password reset token is invalid.");
            tokenExpired = true;
        }
    }
}
<br />
<br />
<br />
<form method="post">
    <div class="row">
        <div class="col-lg-3"></div>
        <div class="col-lg-5">
            <div class="form-horizontal">
                <fieldset>
                    <legend class="text-center">Change Password Form</legend>

                    <div class="form-group">
                        <div class="col-md-4 control-label">
                            <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) { <text> class="error-label" </text>  }>New password</label>
                        </div>
                        <div class="col-md-8">
                            <input class="form-control" type="password" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                            @Html.ValidationMessage("newPassword")
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 control-label">
                            <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) { <text> class="error-label" </text>   }>Confirm password</label>
                        </div>
                        <div class="col-md-8">
                            <input class="form-control" type="password" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                            @Html.ValidationMessage("confirmPassword")
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 control-label">
                            <label for="passwordResetToken" @if (!ModelState.IsValidField("passwordResetToken")) { <text> class="error-label" </text>    }>Reset Token</label>
                        </div>
                        <div class="col-md-8">
                            <input class="form-control" type="text" id="passwordResetToken" name="passwordResetToken" disabled="@isSuccess" value="@passwordResetToken" @Validation.For("passwordResetToken") />
                            @Html.ValidationMessage("passwordResetToken")
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-4 control-label"></div>
                        <div class="col-md-4">
                            <input id="submitbutton" type="submit" class="btn btn-default" value="Reset Password" />
                        </div>
                    </div>
                    <br />

                    <div class="form-group">
                        <div class="col-md-12 text-danger">
                            @AntiForgery.GetHtml()
                            @Html.ValidationSummary(excludeFieldErrors: true)


                            @if (!WebMail.SmtpServer.IsEmpty())
                            {
                                if (tokenExpired)
                                {
                                    <p>The password reset token is incorrect or may be expired. Visit the <a href="~/Account/ForgotPassword">forgot password page</a> to generate a new one.</p>
                                }

                                if (isSuccess) {
                                    <p class="message-success">
                                        Password changed! Click <a href="~/Account/Login" title="Log in">here</a> to log in.
                                    </p>
                                }

                            }
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>
</form>