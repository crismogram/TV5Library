@{
    Layout = "~/_MemberLayout.cshtml";

    var roleName = "";
    string[] userNames = new string[1];
    string[] roleNames = new string[1];

    // Need to manually query users because Membership.GetAllUsers is not working
    var db = Database.Open("StarterSite");
    var selectQueryString = "SELECT * FROM UserProfile";
    
    var querymanager = "SELECT UserProfile.EmployeeNumber, UserProfile.FirstName, UserProfile.LastName, UserProfile.Email, webpages_UsersInRoles.RoleId FROM UserProfile INNER JOIN webpages_UsersInRoles ON UserProfile.UserId = webpages_UsersInRoles.UserId  WHERE (webpages_UsersInRoles.RoleId = 10)";
    var querylibrarian = "SELECT UserProfile.EmployeeNumber, UserProfile.FirstName, UserProfile.LastName, UserProfile.Email, webpages_UsersInRoles.RoleId FROM UserProfile INNER JOIN webpages_UsersInRoles ON UserProfile.UserId = webpages_UsersInRoles.UserId  WHERE (webpages_UsersInRoles.RoleId = 11)";
    var queryuser = "SELECT UserProfile.EmployeeNumber, UserProfile.FirstName, UserProfile.LastName, UserProfile.Email, webpages_UsersInRoles.RoleId FROM UserProfile INNER JOIN webpages_UsersInRoles ON UserProfile.UserId = webpages_UsersInRoles.UserId  WHERE (webpages_UsersInRoles.RoleId = 8)";
    var noneuser = "SELECT UserProfile.EmployeeNumber, UserProfile.FirstName, UserProfile.LastName, UserProfile.Email FROM UserProfile WHERE UserProfile.UserId NOT IN (SELECT UserId FROM [webpages_UsersInRoles])";

    if (IsPost)
    {

        // Create new role
        if (!Request["buttonCreateRole"].IsEmpty())
        {
            roleName = Request["textRoleName"];
            if (!Roles.RoleExists(roleName) && !roleName.IsEmpty())
            {
                Roles.CreateRole(roleName);
            }
        } // if(buttonCreateRole)

        // Delete role
        if (!Request["buttonDeleteRole"].IsEmpty())
        {

            roleName = Request["selectRolename"];
            if (Roles.GetUsersInRole(roleName).Length == 0 && !roleName.IsEmpty())
            {
                Roles.DeleteRole(roleName, true); // true means throw if any users are in this role
            }
        } // if(buttonDeleteRole)


        // Add user to role
        if (!Request["buttonAddUserToRole"].IsEmpty())
        {
            userNames[0] = Request["selectUserName"].Split(' ').Last();
            roleNames[0] = Request["assignRoleName"];
            if (!Roles.IsUserInRole(userNames[0], roleNames[0]))
            {
                Roles.AddUsersToRoles(userNames, roleNames);
            }
        } // if(buttonAddUserToRole)


        // Delete user from role
        if (!Request["buttonDeleteUserFromRole"].IsEmpty())
        {
            userNames[0] = Request["selectUserName"].Split(' ').Last();
            roleNames[0] = Request["assignRoleName"];
            if (Roles.IsUserInRole(userNames[0], roleNames[0]))
            {
                Roles.RemoveUsersFromRoles(userNames, roleNames);
            }
        } // if(buttonDeleteUseFromRole)
    }
}

<form method="post">
    <div class="col-lg-12 text-left">
        <ul class="breadcrumb">
            <li><a href="~/MemberArea/Dashboard.cshtml">Dashboard</a></li>
            <li class="active">Manage Roles</li>
        </ul>
    </div>
    <div class="form-horizontal col-lg-12">
        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">Assign/Delete Users to Roles</div>
                <div class="panel-body">
                    <div class="col-lg-12 form-group">
                        <div class="col-md-3 control-label">
                            <label>User</label>
                        </div>
                        <div class="col-md-9">
                            <select name="selectUserName" class="form-control">
                                @foreach (var row in db.Query(selectQueryString))
                                {
                                    string x = "[" + row.EmployeeNumber + "] " + row.FirstName + " " + row.LastName + " " + row.Email;
                                    <option>@x</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-12 form-group">
                        <div class="col-md-3 control-label">
                            <label>Role</label>
                        </div>
                        <div class="col-md-9">
                            <select name="assignRoleName" class="form-control" id="assignRoleName">

                                @foreach (var r in Roles.GetAllRoles().Except(new[] { "Super Admin", "Manager" }))
                                {
                                    <option>@r</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-12 form-group">
                        <div class="col-md-6">
                            <input class="btn btn-danger" type="submit" id="buttonAddUserToRole" name="buttonAddUserToRole" value="Assign User to Role" />
                        </div>
                        <div class="col-lg-6">
                            <input class="btn btn-danger" type="submit" id="buttonDeleteUserFromRole" name="buttonDeleteUserFromRole" value="Delete User From Role" />
                        </div>
                    </div>

                </div>


            </div>

        </div>
        <div class="col-lg-6">
            <div class="panel panel-info">
                <div class="panel-heading">
                    Roles Directory
                </div>
                <div class="panel-body limitheight600 table-responsive">
                    <ol class="table-responsive">
                        <li><strong>Manager</strong></li>
                        <content>
                            @foreach (var row in db.Query(querymanager))
                            {
                                string x = "[" + row.EmployeeNumber + "] " + row.FirstName + " " + row.LastName + " " + row.Email;
                                <ul>@x</ul>
                            }
                        </content>
                        <li><strong>Librarian</strong></li>
                        <content>
                            @foreach (var row in db.Query(querylibrarian))
                            {
                                string x = "[" + row.EmployeeNumber + "] " + row.FirstName + " " + row.LastName + " " + row.Email;
                                <ul>@x</ul>
                            }
                        </content>
                        <li><strong>Library User</strong></li>
                        <content>
                            @foreach (var row in db.Query(queryuser))
                            {
                                string x = "[" + row.EmployeeNumber + "] " + row.FirstName + " " + row.LastName + " " + row.Email;
                                <ul>@x</ul>
                            }
                        </content>
                        <li><strong>No Roles</strong></li>
                        <content>
                            @foreach (var row in db.Query(noneuser))
                            {
                                string x = "[" + row.EmployeeNumber + "] " + row.FirstName + " " + row.LastName + " " + row.Email;
                                <ul>@x</ul>
                            }
                        </content>
                        </ol>
                </div>
            </div>
        </div>
    </div>
</form>
<br /><br />
